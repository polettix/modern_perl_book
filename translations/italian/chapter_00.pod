=head0 *Prefazione

=encoding utf8

I<Modern Perl> è uno dei modi per descrivere il modo in cui lavorano i migliori programmatori Perl 5. 
Usano idiomi del linguaggio. Si avvantaggiano di CPAN. 
Mostrano senso estetico e arte nello scrivere codice potente, manutenibile, scalabile, conciso ed efficace. 
Anche voi potete imparare a lavorare così!

Perl ha fatto la sua comparsa nel 1987 come semplice strumento per gli amministratori di sistema.
Sebbene agli inizi si proponesse di occupare una nicchia tra lo scripting shell e la programmmazione C,
col tempo è diventato un potente linguaggio general-purpose.
Perl 5 ha una solida storia di pragmatismo e un brillante futuro di raffinamenti e migliorie
N<Perl 6 è una reinvenzione della programmazione basata sui solidi principi base del Perl, ma è un argomento per un altro libro.>.

Durante la ormai lunga storia di Perl--specialmente i 17 anni di Perl 5--la nostra percezione di che cosa sia un programma Perl eccellente è cambiata. 
Se da una parte potete scrivere programmi efficaci senza avvantaggiarvi di tutto ciò che il linguaggio vi offre,
dall'altra la comunità Perl globale ha inventato, preso a prestito, migliorato, e raffinato molte idee e le ha rese disponibili a chiunque le voglia apprendere.

=head1 Usare Modern Perl

Il modulo Modern::Perl, disponibile su CPAN (L<cpan>), richiede a Perl di segnalare l'uso di costrutti dubbi e errori di battitura, 
e attiva nuove funzionalità introdotte nelle versioni recenti di Perl 5. Assumete che ogni esempio in questo libro inizi con:

=begin programlisting

    use Modern::Perl;

=end programlisting

Se per qualche ragione non potete installare questo modulo, potete iniziare i vostri programmi con il seguente codice che è approssimativamente equivalente:

=begin programlisting

    use 5.012;
    use strict;
    use warnings;
    use autodie;

=end programlisting

A meno di diversa indicazione, i pezzi di codice presentati assumono sempre il seguente scheletro base di programma:

=begin programlisting

    #!/usr/bin/perl

    use Modern::Perl;

    # di seguito il codice dell'esempio

=end programlisting

Altri pezzi di codice utilizzano funzioni di test come C<ok()>, C<like()> e
C<is()> (L<testing>). In questo caso il programma scheletro è:

=begin programlisting

    #!/usr/bin/perl

    use Modern::Perl;
    B<use Test::More;>

    # di seguito il codice dell'esempio

    done_testing();

=end programlisting

Al momento della scrittura di questo libro, la famiglia di versioni stabili di Perl 5 è Perl 5.14.
Gli esempi in questo libro funzionano al meglio con Perl 5.12.0 o successivi. 
Molti esempi funzionano, con piccole modifiche, anche con versioni di Perl 5 più datate, ma incontrerete difficoltà
maggiori con le versioni più vecchie di 5.10.0. 

X<Strawberry Perl>
X<ActivePerl>
X<perlbrew>
X<CPAN; C<App::perlbrew>>

Spesso sarete in grado di installare una nuova versione di Perl per vostro
conto. Gli utenti che utilizzano Windows possono scaricare Strawberry Perl
da U<http://www.strawberryperl.com/>. Gli utenti di altri sistemi operativi
che hanno già Perl 5 installato (oltre ad un compilatore C ed agli altri
strumenti di sviluppo) possono partire installando il modulo
C<App::perlbrew>N<Le istruzioni di installazione sono disponibili
all'indirizzo U<http://search.cpan.org/perldoc?App::perlbrew>.> da CPAN.

C<perlbrew> vi consente di installare e gestire più versioni di Perl 5; per
default le installa nella vostra directory base. Non solo potete avere più
versioni disponibili senza interferire con il Perl del sistema, ma potete
anche installare qualsiasi modulo vogliate in queste directory senza bisogno
di chiedere permessi specifici all'amministratore di sistema.

=head1 Perl 5 e Perl 6

Vi conviene imparare Perl 5 o Perl 6? Condividono filosofia, sintassi,
librerie e comunità, ma vanno a riempire nicchie differenti. Imparate
Perl 5 se:

=over 4

=item * dovete manutenere codice Perl 5 esistente

=item * volete utilizzare i moduli su CPAN

=item * la vostra strategia di distribuzione ed installazione richiede una stabilità rigorosa

=back

Imparate Perl 6 se:

=over 4

=item * vi sta bene gestire upgrade frequenti

=item * vi potete permettere di sperimentare nuove sintassi e caratteristiche

=item * avete bisogno di caratteristiche nuove disponibili solo in Perl 6

=item * potete contribuire al suo sviluppo (con patch, segnalazioni di bug,
documentazione, sponsorizzazione o altre risorse)

=back

In generale, lo sviluppo con Perl 5 è conservativo rispetto al linguaggio
base. Nel bene o nel male, i cambiamenti sono lenti. Perl 6 è più
sperimentale, poiché è più importante avere un linguaggio progettato nel
miglior modo possibile piuttosto che garantire che il vecchio codice funzioni.
Fortunatamente potete imparare ed utilizzare entrambi i linguaggi (e 
man mano che si va avanti lavorano sempre meglio insieme).

Questo libro si concentra su Perl 5; per imparare di più su Perl 6
potete andare su 
U<http://perl6.org/>, provare Rakudo (U<http://www.rakudo.org/>),
e fare riferimento al libro I<Using Perl 6>, pubblicato anch'esso da
Onyx Neon Press.

=head1 Riconoscimenti

Questo libro non sarebbe stato possibile nella sua forma corrente senza
le domande, i commenti, i suggerimenti ed i consigli, la saggezza e
l'incoraggiamento di tanta, tanta gente. In particolare, l'autore e
l'editore vogliono ringraziare:

John SJ Anderson, Peter Aronoff, Lee Aylward, Alex Balhatchet, Ævar Arnfjörð
Bjarmason, Matthias Bloch, John Bokma, Vasily Chekalkin, Dmitry Chestnykh, E.
Choroba, Paulo Custodio, Felipe, Shlomi Fish, Jeremiah Foster, Mark Fowler,
John Gabriele, Andrew Grangaard, Bruce Gray, Ask Bjørn Hansen, Tim Heaney,
Robert Hicks, Michael Hind, Mark Hindess, Yary Hluchan, Mike Huffman, Curtis
Jewell, Mohammed Arafat Kamaal, James E Keenan, Yuval Kogman, Jan Krynicky,
Jeff Lavallee, Moritz Lenz, Jean-Baptiste Mazon, Josh McAdams, Gareth
McCaughan, John McNamara, Shawn M Moore, Alex Muntada, Carl Mäsak, Chris
Niswander, Nelo Onyiah, Chas. Owens, ww from PerlMonks, Jess Robinson, Dave
Rolsky, Gabrielle Roth, Andrew Savige, Lorne Schachter, Dan Scott, Alexander
Scott-Johns, Phillip Smith, Christopher E. Stith, Mark A. Stratman, Bryan
Summersett, Audrey Tang, Scott Thomson, Ben Tilly, Sam Vilain, Larry Wall,
Colin Wetherbee, Frank Wiegand, Doug Wilson, Sawyer X, David Yingling, Marko
Zagozen, harleypig, hbm, and sunnavy.

Gli errori sono colpa della testardaggine dell'autore.

=head1 Traduzione

Questa traduzione è stata effettuata dall'Associazione di Promozione Sociale
B<Perl.it>, nelle persone di: Flavio Poletti.
