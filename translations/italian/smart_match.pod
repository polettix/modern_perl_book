=head1 Matching Intelligente

Z<smart_match>

X<match intelligente>
X<operatori; match intelligente>
X<C<~~>; operatore di match intelligente>
X<operatore; C<~~>>
X<istruzioni predefinite; C<given>>

L'operatore di match intelligente, C<~~>, confronta due operandi e restituisce un valore vero
se il match tra di essi ha successo. L'indeterminatezza della definizione dimostra l'intelligenza
dell'operatore: il tipo di confronto dipende dai tipi di entrambi
gli operandi. C<given> (L<given_when>) effettua implicitamente un match intelligente.

X<operatori; C<~~>>
X<C<~~>; operatore di match intelligente>

L'operatore di match intelligente è un operatore infisso:

=begin programlisting

    say 'Concordano (per qualche ragione)' if $operandos ~~ $operandod;

=end programlisting

Il tipo di confronto dipende generalmente in primo luogo dal tipo dell'operando destro
e in secondo luogo dell'operando sinistro. Per esempio, se l'operando destro è uno scalare
con una componente numerica, il confronto sarà basato sull'uguaglianza numerica. Se l'operando
destro è una regex, il confronto userà un grep o un match di pattern.
Se l'operando destro è un array, il confronto effettuerà un grep o un match
intelligente ricorsivo. Se l'operando destro è un hash, il confronto verificherà
l'esistenza di una o più chiavi.

For example:

=begin programlisting

    # confronto scalare numerico
    my $x = 10;
    my $y = 20;
    say 'Numericamente diversi' unless $x ~~ $y;

    # confronto scalare pseudo-numerico
    my $x = 10;
    my $y = '10 piccoli indiani';
    say 'Pseudo-numericamente uguali' if $x ~~ $y;

=end programlisting

... oppure:

=begin programlisting

    my $agopat = qr/ago/;

    say 'Match di pattern'
        if $ago   ~~ $agopat

    say 'Grep su array'
        if @pagliaio ~~ $agopat;

    say 'Grep su chiavi di hash'
        if %pagliaio  ~~ $agopat;

=end programlisting

... oppure:

=begin programlisting

    say 'Grep su array'
        if $agopat  ~~ @pagliaio;

    say 'Gli elementi dell'array esistono come chiavi di hash'
        if %hashiago    ~~ @pagliaio;

    say 'Smart match tra elementi di array'
        if @mucchio_di_paglia ~~ @pagliaio;

=end programlisting

.... oppure:

=begin programlisting

    say 'Grep su chiavi di hash'
        if $agopat ~~ %hashiago;

    say 'Gli elementi dell'array esistono come chiavi di hash'
        if @pagliaio  ~~ %hashiago;

    say 'Chiavi di hash identiche'
        if %hashiago   ~~ %mappago;

=end programlisting

Questi confronti funzionano anche quando uno degli operandi è un I<riferimento> uno dei tipi
di dati elencati. Per esempio:

=begin programlisting

    say 'Chiavi di hash identiche' if %pagliaio ~~ \%hashiago;

=end programlisting

Una tabella di dimensioni scoraggianti in C<perldoc perlsyn> fornisce molti più dettagli
sui confronti che il match intelligente può effettuare. Una rilevante proposta
per la versione 5.16 suggerisce di semplificare il match intelligente in modo sostanziale. Più i vostri operandi sono complicati,
più è probabile che i risultati confondano chi legge il vostro programma. Se
evitate di confrontare oggetti e vi limitate a semplici operazioni con scalari o al più
tra uno scalare e un aggregato, otterrete risultati migliori.
